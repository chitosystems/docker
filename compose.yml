services:
  app:
    build:
      context: ./php/
      dockerfile: Dockerfile
      args:
        TZ: ${TZ}
        PHP_VERSION: ${PHP_VERSION}
        ENVIRONMENT: ${ENVIRONMENT}
        APP_DIRECTORY: ${APP_DIRECTORY}
    image: ${APP_CONTAINER_NAME}:v0.2
    restart: unless-stopped
    environment:
      TZ: ${TZ}
      VIRTUAL_HOST: ${APP_VIRTUAL_HOST}
      APP_DIRECTORY: ${APP_DIRECTORY}
      PHP_VERSION: ${PHP_VERSION}
      ENVIRONMENT: ${ENVIRONMENT}
      REPOSITORY_URL: ${REPOSITORY_URL}
      REPOSITORY_HOST: ${REPOSITORY_HOST}
      REPOSITORY_BRANCH: ${REPOSITORY_BRANCH}
    container_name: ${APP_CONTAINER_NAME}
    volumes:
      - ./app:${APP_DIRECTORY}
      - ./php/php.ini:/usr/local/etc/php/php.ini
    networks:
      - app-network
    depends_on:
      - mysql
      - redis

  nginx:
    build:
      context: ./nginx/
      dockerfile: Dockerfile
      args:
        NGINX_TAG: ${NGINX_TAG}
        VIRTUAL_HOST: ${APP_VIRTUAL_HOST}
        APP_CONTAINER_NAME: ${APP_CONTAINER_NAME}
        TZ: ${TZ}
    image: ${NGINX_PROXY_CONTAINER_NAME}:${NGINX_TAG}
    container_name: ${NGINX_PROXY_CONTAINER_NAME}
    restart: always
    ports:
      - "${APP_PORT_CONTAINER}:80"
      - "${APP_SSL_PORT_CONTAINER}:443"
    volumes:
      - ./app:${APP_DIRECTORY}
      #- ./nginx/default.template.conf:/etc/nginx/templates/nginx.conf.template
      - ./nginx/ssl:/etc/nginx/ssl
    environment:
      VIRTUAL_HOST: ${APP_VIRTUAL_HOST}
      APP_CONTAINER_NAME: ${APP_CONTAINER_NAME}
      TZ: ${TZ}
    networks:
      - app-network
    depends_on:
      - app

  mysql:
    build:
      context: ./mysql
      dockerfile: Dockerfile
      args:
        MYSQL_TAG: ${MYSQL_TAG}
    image: ${MYSQL_TAG}
    container_name: ${MYSQL_CONTAINER_NAME}
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB_DATABASE}
      MYSQL_USER: ${MYSQL_DB_USER}
      MYSQL_PASSWORD: ${MYSQL_DB_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
      args:
        REDIS_TAG: ${REDIS_TAG}
        REDIS_PASSWORD: ${REDIS_PASSWORD}
    container_name: ${REDIS_CONTAINER_NAME}
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  phpmyadmin:
    image: ${PMA_TAG}
    container_name: ${PMA_CONTAINER_NAME}
    restart: always
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${MYSQL_DB_ROOT_PASSWORD}
      UPLOAD_LIMIT: 200000000
    ports:
      - "${PMA_PROXY_PORT_CONTAINER}:80"
    depends_on:
      - mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  app:
    name: silverstripe_app_data
  mysql-data:
    name: silverstripe_mysql_data
  redis-data:
    name: silverstripe_redis_data
